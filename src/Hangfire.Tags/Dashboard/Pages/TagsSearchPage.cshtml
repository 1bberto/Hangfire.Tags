@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: True *@
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@using Hangfire.Dashboard.Resources
@using Hangfire.Tags.Storage
@inherits RazorPage
@{
    Layout = new LayoutPage("Tags");

    int.TryParse(Query("from"), out var from);
    int.TryParse(Query("count"), out var perPage);

    var tag = Query("tag");

    var tagStorage = new TagsStorage(Storage);

    var monitor = tagStorage.GetMonitoringApi();
}

<div class="row">
    <div class="col-md-3">
        @Html.JobsSidebar()
    </div>
    <div class="col-md-9">
        <h1 class="page-header">Tags</h1>
        
        <!-- Add search box here -->

        @{
            if (string.IsNullOrEmpty(tag))
            {
                // Show a page with all tags
                var allTags = tagStorage.GetAllTags();

                <div class="tags">
                    @foreach (var t in allTags)
                    {
                        <span class="label label-info">@t</span>
                    }
                </div>
            }
            else
            {
                // Show a page with a list of matching jobs

                var pager = new Pager(from, perPage, monitor.GetJobCount(tag));
                var matchingJobs = monitor.GetMatchingJobs(tag, pager.FromRecord, pager.RecordsPerPage);

                if (pager.TotalPageCount == 0)
                {
                     <div class="alert alert-info">
                         @Strings.SucceededJobsPage_NoJobs
                     </div>
                }
                else
                {
                    <div class="js-jobs-list">
                        <div class="btn-toolbar btn-toolbar-top">
                            <button class="js-jobs-list-command btn btn-sm btn-primary"
                                    data-url="@Url.To("/jobs/enqueued/requeue")"
                                    data-loading-text="@Strings.Common_Enqueueing"
                                    disabled="disabled">
                                <span class="glyphicon glyphicon-repeat"></span>
                                @Strings.Common_RequeueJobs
                            </button>

                            @Html.PerPageSelector(pager)
                        </div>

                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                <tr>
                                    <th class="min-width">
                                        <input type="checkbox" class="js-jobs-list-select-all"/>
                                    </th>
                                    <th class="min-width">@Strings.Common_Id</th>
                                    <th>@Strings.Common_Job</th>
                                    <th class="align-right">@Strings.Common_State</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var job in matchingJobs)
                                {
                                    <tr class="js-jobs-list-row">
                                        <td>
                                            <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@job.Key"/>
                                        </td>
                                        <td class="min-width">
                                            @Html.JobIdLink(job.Key)
                                        </td>

                                        @if (job.Value == null)
                                        {
                                            <td colspan="3">
                                                <em>@Strings.Common_JobExpired</em>
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="word-break">
                                                @Html.JobNameLink(job.Key, job.Value.Job)
                                            </td>
                                            <td class="min-width align-right">
                                                @job.Value.State
                                            </td>
                                        }
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>

                        @Html.Paginator(pager)
                    </div>
                }
            }
        }
    </div>
</div>